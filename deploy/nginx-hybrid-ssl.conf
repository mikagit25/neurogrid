# NeuroGrid - Hybrid Production Configuration with SSL
# Preserves existing port 8080 setup + adds subdomains for production

# Rate limiting for production subdomains
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=app_limit:10m rate=200r/m;

# Upstream servers for production subdomains
upstream api_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream app_backend {
    server 127.0.0.1:3000;
    keepalive 32;
}

# MAIN: neurogrid.network - proxy to port 8080 (MVP)
server {
    server_name neurogrid.network www.neurogrid.network;
    
    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/neurogrid.network/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neurogrid.network/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# API: api.neurogrid.network - proxy to coordinator-server (port 3001)
server {
    server_name api.neurogrid.network;
    
    # Rate limiting for API
    limit_req zone=api_limit burst=50 nodelay;
    
    # Proxy to coordinator-server on port 3001
    location / {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://api_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/neurogrid.network/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neurogrid.network/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# APP: app.neurogrid.network - proxy to web-interface (port 3000)
server {
    server_name app.neurogrid.network;
    
    # Rate limiting for App
    limit_req zone=app_limit burst=100 nodelay;
    
    # Proxy to web-interface on port 3000
    location / {
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Next.js static files caching
    location /_next/static/ {
        proxy_pass http://app_backend;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, immutable";
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/neurogrid.network/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neurogrid.network/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# HTTP to HTTPS redirects
server {
    if ($host = www.neurogrid.network) {
        return 301 https://$host$request_uri;
    }

    if ($host = neurogrid.network) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name neurogrid.network www.neurogrid.network;
    return 404;
}

server {
    if ($host = api.neurogrid.network) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name api.neurogrid.network;
    return 404;
}

server {
    if ($host = app.neurogrid.network) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name app.neurogrid.network;
    return 404;
}