#!/bin/bash

# NeuroGrid Automated Deployment Script
# –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä–∫—É –ª–æ–∫–∞–ª—å–Ω–æ –∏ –¥–µ–ø–ª–æ–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä

set -e

# Configuration
SERVER_IP="37.77.106.215"
SERVER_USER="root"  # or your server username
DEPLOY_PATH="/var/www/neurogrid"
BACKUP_PATH="/var/backups/neurogrid"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if SSH key exists
if [ ! -f ~/.ssh/id_rsa ]; then
    print_warning "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω –ø–∞—Ä–æ–ª—å."
fi

print_status "üöÄ NeuroGrid Automated Deployment Starting..."

# Step 1: Build locally
print_status "üì¶ –®–∞–≥ 1: –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞..."
./build-production.sh

if [ $? -ne 0 ]; then
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–µ"
    exit 1
fi

# Step 2: Create backup on server
print_status "üíæ –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ backup –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh ${SERVER_USER}@${SERVER_IP} "
    sudo mkdir -p ${BACKUP_PATH}
    if [ -d ${DEPLOY_PATH} ]; then
        sudo cp -r ${DEPLOY_PATH} ${BACKUP_PATH}/backup-\$(date +%Y%m%d-%H%M%S)
        echo 'Backup —Å–æ–∑–¥–∞–Ω'
    else
        echo '–ü–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π - backup –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'
    fi
"

# Step 3: Upload files
print_status "üì§ –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -r dist/ ${SERVER_USER}@${SERVER_IP}:/tmp/neurogrid-deploy/

# Step 4: Deploy on server
print_status "üîß –®–∞–≥ 4: –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh ${SERVER_USER}@${SERVER_IP} << 'EOF'
    set -e
    
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    sudo mkdir -p /var/www/neurogrid
    sudo mkdir -p /var/log/neurogrid
    
    echo "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
    sudo cp -r /tmp/neurogrid-deploy/* /var/www/neurogrid/
    
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    sudo chown -R www-data:www-data /var/www/neurogrid
    sudo chmod -R 755 /var/www/neurogrid
    
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤..."
    sudo chown -R www-data:www-data /var/log/neurogrid
    sudo chmod -R 755 /var/log/neurogrid
    
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    if [ -f /var/www/neurogrid/nginx-hybrid.conf ]; then
        sudo cp /var/www/neurogrid/nginx-hybrid.conf /etc/nginx/sites-available/
        sudo ln -sf /etc/nginx/sites-available/nginx-hybrid.conf /etc/nginx/sites-enabled/
        sudo nginx -t && sudo systemctl reload nginx
        echo "Nginx –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
    
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd /var/www/neurogrid
    sudo -u www-data ./install-production.sh
    
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    if [ -f setup-database.sql ]; then
        sudo -u postgres psql < setup-database.sql || echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    fi
    
    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    pm2 stop neurogrid-coordinator neurogrid-web || true
    pm2 delete neurogrid-coordinator neurogrid-web || true
    
    echo "–ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    cd /var/www/neurogrid
    pm2 start ecosystem.config.json
    pm2 save
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
    pm2 status
    
    echo "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf /tmp/neurogrid-deploy
    
    echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
EOF

if [ $? -ne 0 ]; then
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    exit 1
fi

# Step 5: Health check
print_status "üè• –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
sleep 10

# Check API
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
if curl -s -f http://${SERVER_IP}:3001/health > /dev/null; then
    print_success "API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
fi

# Check Web App
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Web App..."
if curl -s -f http://${SERVER_IP}:3000 > /dev/null; then
    print_success "Web App —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "Web App –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
fi

# Final status
print_success "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""
print_status "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: http://neurogrid.network"
echo "   ‚Ä¢ API: http://api.neurogrid.network"
echo "   ‚Ä¢ Web App: http://app.neurogrid.network"
echo ""
print_status "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   ‚Ä¢ PM2 —Å—Ç–∞—Ç—É—Å: ssh ${SERVER_USER}@${SERVER_IP} 'pm2 status'"
echo "   ‚Ä¢ –õ–æ–≥–∏ API: ssh ${SERVER_USER}@${SERVER_IP} 'pm2 logs neurogrid-coordinator'"
echo "   ‚Ä¢ –õ–æ–≥–∏ Web: ssh ${SERVER_USER}@${SERVER_IP} 'pm2 logs neurogrid-web'"
echo ""
print_warning "‚ö†Ô∏è  –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: certbot --nginx -d api.neurogrid.network -d app.neurogrid.network"
echo "   2. –í–∫–ª—é—á–∏—Ç—å HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –≤ nginx"
echo "   3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –±—ç–∫–∞–ø—ã"

# Clean up local build
print_status "üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏..."
rm -rf dist/
print_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"