#!/bin/bash

# NeuroGrid Safe Deployment Script
# –ë–µ—Ä–µ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã –Ω–µ –ª–æ–º–∞—è —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é —Å–∏—Å—Ç–µ–º—É
# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç PM2 –ø—Ä–æ—Ü–µ—Å—Å neurogrid –Ω–∞ –ø–æ—Ä—Ç—É 8080

set -e

# Configuration
SERVER_IP="37.77.106.215"
SERVER_USER="root"
SERVER_PATH="/root/neurogrid/neurogrid-main/deploy"
BACKUP_PATH="/root/neurogrid-backups"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check SSH connection
check_connection() {
    print_status "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
    if ! ssh -o ConnectTimeout=5 ${SERVER_USER}@${SERVER_IP} "echo 'Connection OK'" >/dev/null 2>&1; then
        print_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
        exit 1
    fi
    print_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"
}

# Create backup on server
create_backup() {
    print_status "üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    BACKUP_DIR="${BACKUP_PATH}/backup-$(date +%Y%m%d-%H%M%S)"
    
    ssh ${SERVER_USER}@${SERVER_IP} "
        mkdir -p ${BACKUP_DIR}
        cp -r ${SERVER_PATH} ${BACKUP_DIR}/
        echo 'Backup —Å–æ–∑–¥–∞–Ω –≤: ${BACKUP_DIR}'
    "
    
    print_success "Backup —Å–æ–∑–¥–∞–Ω: ${BACKUP_DIR}"
}

# Check current system status
check_system_status() {
    print_status "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "
        echo '=== PM2 Status ==='
        pm2 list | grep neurogrid || echo 'neurogrid –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        
        echo '=== Port 8080 Status ==='
        sudo netstat -tlnp | grep ':8080' || echo '–ü–æ—Ä—Ç 8080 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è'
        
        echo '=== Nginx Status ==='
        sudo nginx -t && echo 'Nginx –∫–æ–Ω—Ñ–∏–≥ OK' || echo 'Nginx –∫–æ–Ω—Ñ–∏–≥ –û–®–ò–ë–ö–ê'
        
        echo '=== Current Landing Page Size ==='
        wc -l ${SERVER_PATH}/landing-page.html 2>/dev/null || echo 'landing-page.html –Ω–µ –Ω–∞–π–¥–µ–Ω'
    "
}

# Deploy specific files safely
deploy_files() {
    print_status "üì§ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # Only deploy essential files that we know are good
    FILES_TO_DEPLOY=(
        "deploy/landing-page.html"
        "deploy/investors.html" 
        "deploy/demo-client.html"
        "deploy/api-docs.html"
        "deploy/technical-docs.html"
        "deploy/about-project.html"
    )
    
    for file in "${FILES_TO_DEPLOY[@]}"; do
        if [ -f "$file" ]; then
            print_status "–ó–∞–≥—Ä—É–∂–∞–µ–º: $file"
            scp "$file" ${SERVER_USER}@${SERVER_IP}:${SERVER_PATH}/$(basename "$file")
        else
            print_warning "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ: $file"
        fi
    done
}

# Update nginx config safely (only if needed)
update_nginx_config() {
    print_status "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # Only update if we have a newer config
    if [ -f "deploy/nginx-hybrid.conf" ]; then
        print_status "–ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π nginx –∫–æ–Ω—Ñ–∏–≥..."
        scp deploy/nginx-hybrid.conf ${SERVER_USER}@${SERVER_IP}:/tmp/nginx-hybrid-new.conf
        
        ssh ${SERVER_USER}@${SERVER_IP} "
            # Test the new config first
            sudo cp /tmp/nginx-hybrid-new.conf /etc/nginx/sites-available/neurogrid-hybrid-new.conf
            sudo nginx -t -c /etc/nginx/nginx.conf || {
                echo '–ù–æ–≤—ã–π nginx –∫–æ–Ω—Ñ–∏–≥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è'
                sudo rm -f /etc/nginx/sites-available/neurogrid-hybrid-new.conf
                exit 1
            }
            
            # If test passed, activate it
            sudo mv /etc/nginx/sites-available/neurogrid-hybrid-new.conf /etc/nginx/sites-available/neurogrid-hybrid.conf
            sudo ln -sf /etc/nginx/sites-available/neurogrid-hybrid.conf /etc/nginx/sites-enabled/neurogrid-hybrid.conf
            sudo nginx -t && sudo systemctl reload nginx
            echo 'Nginx –∫–æ–Ω—Ñ–∏–≥ –æ–±–Ω–æ–≤–ª–µ–Ω'
        "
    else
        print_warning "nginx-hybrid.conf –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
}

# Restart only if needed
restart_services() {
    print_status "üîÑ –ú—è–≥–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "
        # Check if neurogrid process is running healthy
        if pm2 describe neurogrid >/dev/null 2>&1; then
            echo 'PM2 –ø—Ä–æ—Ü–µ—Å—Å neurogrid –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...'
            pm2 restart neurogrid
            sleep 3
            pm2 logs neurogrid --lines 5
        else
            echo 'PM2 –ø—Ä–æ—Ü–µ—Å—Å neurogrid –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞'
        fi
    "
}

# Health check
health_check() {
    print_status "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    sleep 5
    
    # Check main site
    if curl -s -f "http://${SERVER_IP}:8080" >/dev/null; then
        print_success "‚úÖ –ì–ª–∞–≤–Ω—ã–π —Å–∞–π—Ç (–ø–æ—Ä—Ç 8080) —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        print_error "‚ùå –ì–ª–∞–≤–Ω—ã–π —Å–∞–π—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 1
    fi
    
    # Check through nginx
    if curl -s -f "http://neurogrid.network" >/dev/null; then
        print_success "‚úÖ –°–∞–π—Ç —á–µ—Ä–µ–∑ nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        print_warning "‚ö†Ô∏è –°–∞–π—Ç —á–µ—Ä–µ–∑ nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ DNS –µ—â–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è)"
    fi
    
    # Check for MVP features
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º MVP —Ñ—É–Ω–∫—Ü–∏–∏..."
    if curl -s "http://neurogrid.network" | grep -q "investors\|demo" >/dev/null 2>&1; then
        print_success "‚úÖ MVP —Ñ—É–Ω–∫—Ü–∏–∏ (investors/demo) –Ω–∞–π–¥–µ–Ω—ã"
    else
        print_warning "‚ö†Ô∏è MVP —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ"
    fi
}

# Rollback function
rollback() {
    print_error "üîÑ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    LATEST_BACKUP=$(ssh ${SERVER_USER}@${SERVER_IP} "ls -t ${BACKUP_PATH}/ | head -1")
    
    if [ -n "$LATEST_BACKUP" ]; then
        ssh ${SERVER_USER}@${SERVER_IP} "
            cp -r ${BACKUP_PATH}/${LATEST_BACKUP}/deploy/* ${SERVER_PATH}/
            pm2 restart neurogrid
        "
        print_success "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –∏–∑ backup: $LATEST_BACKUP"
    else
        print_error "Backup –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–∫–∞—Ç–∞"
    fi
}

# Main deployment flow
main() {
    print_status "üöÄ NeuroGrid Safe Deployment Script"
    print_warning "‚ö†Ô∏è –ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è —Å Telegram/TON - –¥–µ–ø–ª–æ–∏–º –±—ã—Å—Ç—Ä–æ –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ!"
    echo ""
    
    check_connection
    check_system_status
    create_backup
    
    print_status "üì¶ –ù–∞—á–∏–Ω–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π..."
    
    # Deploy files
    if deploy_files; then
        print_success "–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤"
        rollback
        exit 1
    fi
    
    # Update nginx if needed
    if update_nginx_config; then
        print_success "Nginx –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        print_warning "Nginx –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å)"
    fi
    
    # Restart services
    if restart_services; then
        print_success "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤"
        rollback
        exit 1
    fi
    
    # Final health check
    if health_check; then
        print_success "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        echo ""
        print_status "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç:"
        echo "   ‚Ä¢ http://neurogrid.network"
        echo "   ‚Ä¢ http://api.neurogrid.network" 
        echo "   ‚Ä¢ http://app.neurogrid.network"
        echo ""
        print_status "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
        echo "   ‚Ä¢ PM2: ssh ${SERVER_USER}@${SERVER_IP} 'pm2 status'"
        echo "   ‚Ä¢ –õ–æ–≥–∏: ssh ${SERVER_USER}@${SERVER_IP} 'pm2 logs neurogrid'"
        echo ""
        print_warning "üöÄ –ì–æ—Ç–æ–≤—ã –∫–æ–Ω–∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Telegram!"
    else
        print_error "–ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
        rollback
        exit 1
    fi
}

# Handle Ctrl+C
trap 'print_error "–î–µ–ø–ª–æ–π –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; rollback; exit 1' INT

# Run main function
main "$@"